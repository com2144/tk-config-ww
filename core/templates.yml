# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.

#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
  Sequence:
    type: str
  Shot:
    type: str
  Step:
    type: str
  sg_asset_type:
    type: str
  Task:
    type: str
  Asset:
    type: str
  name:
    type: str
    filter_by: alphanumeric
  iteration:
    type: int
  version:
    type: int
    format_spec: "03"
  version_four:
    type: int
    format_spec: "04"
    alias: version
  timestamp:
    type: str
  width:
    type: int
  height:
    type: int
  segment_name:
    type: str

  # Represents the optional output name for frames written by the Shotgun Write Node
  nuke.output:
    alias: output
    type: str
    filter_by: alphanumeric

  SEQ:
    type: sequence
    format_spec: "04"

  eye:
    type: str
  houdini.node:
    alias: node
    type: str
  aov_name:
    type: str

  # Maya supports two extension types.
  maya_extension:
    type: str
    choices:
      ma: Maya Ascii (.ma)
      mb: Maya Binary (.mb)
    default: ma
    alias: extension

  # Katana output filtering
  katana_output:
    alias: output
    type: str
    filter_by: alphanumeric

  # These are used for the Mari UDIM pipeline:
  UDIM:
    type: sequence
    default: "<UDIM>"
  mari.channel:
    type: str
    alias: channel
  mari.layer:
    type: str
    alias: layer
  mari.project_name:
    type: str
    alias: name
  asset_name:
    type: str
    shotgun_entity_type: Asset
    shotgun_field_name: code
  task_name:
    type: str
    shotgun_entity_type: Task
    shotgun_field_name: content

#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:
  # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
  # templates. This also makes it easy to change any of the common root paths and have the
  # changes apply to all templates that use them.
  #
  # These don't require the standard formatting (with definition and root_name) because they
  # will be set within each template that uses the alias.
  shot_root: sequences/{Sequence}/{Shot}/{Task}
  asset_root: assets/{sg_asset_type}/{Asset}/{Step}/{Task}
  mari_asset_root: assets/
  sequence_root: sequences/{Sequence}

  ##########################################################################################
  # Project level paths
  #

  ##########################################################################################
  # Sequence level paths
  #

  #
  #Clarisse
  #

  # define the location of a dev area
  sequence_dev_area_clarisse:
    definition: '@sequence_root/dev/clarisse'
  # define the location of a pub area
  sequence_pub_area_clarisse:
    definition: '@sequence_root/pub/clarisse'
  # The location of WIP files
  clarisse_sequence_dev:
    definition: '@sequence_root/dev/clarisse/{name}.v{version}.project'
  # The location of backups of WIP files
  clarisse_sequence_snapshot:
    definition: '@sequence_root/dev/clarisse/snapshots/{name}.v{version}.{timestamp}.project'
  # The location of pubed clarisse files
  clarisse_sequence_pub:
    definition: '@sequence_root/pub/clarisse/{name}.v{version}.project'

  ##########################################################################################
  # Shot level paths
  #

  #
  # Maya
  #

  # define the location of a dev area
  shot_dev_area_maya:
    definition: "@shot_root/dev/maya"
  # define the location of a pub area
  shot_pub_area_maya:
    definition: "@shot_root/pub/maya"
  # The location of WIP files
  maya_shot_dev:
    definition: "@shot_root/dev/maya/{Sequence}_{Shot}_{Task}_{name}.v{version}.{maya_extension}"
  # The location of backups of WIP files
  maya_shot_snapshot:
    definition: "@shot_root/dev/maya/snapshots/{Sequence}_{Shot}_{Task}_{name}.v{version}.{timestamp}.{maya_extension}"
  # The location of pubed maya files
  maya_shot_pub:
    definition: "@shot_root/pub/maya/{Sequence}_{Shot}_{Task}_{name}.v{version}.{maya_extension}"

  #
  # Nuke
  #

  # define the location of a dev area
  shot_dev_area_nuke:
    definition: "@shot_root/dev/nuke"
  # define the location of a pub area
  shot_pub_area_nuke:
    definition: "@shot_root/pub/nuke"
  # The location of WIP script files
  nuke_shot_dev:
    definition: "@shot_root/dev/nuke/{Sequence}_{Shot}_{Task}_{name}.v{version}.nk"
  # The location of backups of WIP files
  nuke_shot_snapshot:
    definition: "@shot_root/dev/nuke/snapshots/{Sequence}_{Shot}_{Task}_{name}.v{version}.{timestamp}.nk"
  # The location of pubed nuke script files
  nuke_shot_pub:
    definition: "@shot_root/pub/nuke/{Sequence}_{Shot}_{Task}_{name}.v{version}.nk"
  # write node outputs
  nuke_shot_render_mono_dpx:
    definition: "@shot_root/dev/images/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.dpx"
  nuke_shot_render_pub_mono_dpx:
    definition: "@shot_root/pub/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.dpx"
  nuke_shot_render_stereo:
    definition: "@shot_root/dev/images/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr"
  nuke_shot_render_pub_stereo:
    definition: "@shot_root/pub/elements/{name}/v{version}/{width}x{height}/{Shot}_{name}_{nuke.output}_{eye}_v{version}.{SEQ}.exr"
  # review output
  shot_quicktime_quick:
    definition: "@shot_root/review/quickdaily/{Shot}_{name}_{iteration}.mov"
  nuke_shot_render_movie:
    definition: "@shot_root/review/{Shot}_{name}_{nuke.output}_v{version}.mov"

  #
  # Houdini
  #

  # define the location of a dev area
  shot_dev_area_houdini:
    definition: "@shot_root/dev/houdini"
  # define the location of a pub area
  shot_pub_area_houdini:
    definition: "@shot_root/pub/houdini"
  # The location of WIP files
  houdini_shot_dev:
    definition: "@shot_root/dev/houdini/{Sequence}_{Shot}_{Task}_{name}.v{version}.hip"
  # The location of backups of WIP files
  houdini_shot_snapshot:
    definition: "@shot_root/dev/houdini/snapshots/{Sequence}_{Shot}_{Task}_{name}.v{version}.{timestamp}.hip"
  # The location of pubed houdini files
  houdini_shot_pub:
    definition: "@shot_root/pub/houdini/{Sequence}_{Shot}_{Task}_{name}.v{version}.hip"
  # Alembic caches
  houdini_shot_dev_alembic_cache:
    definition: "@shot_root/dev/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Shot}_{name}_v{version}.abc"

  # Rendered images
  houdini_shot_render:
    definition: "@shot_root/dev/images/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.exr"

  # Additional mantra outputs
  houdini_shot_ifd:
    definition: "@shot_root/dev/ifds/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.ifd"

  houdini_shot_dcm:
    definition: "@shot_root/dev/dcms/{name}/{houdini.node}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.dcm"

  houdini_shot_extra_plane:
    definition: "@shot_root/dev/images/{name}/{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Shot}_{name}_v{version}.{SEQ}.exr"

  #
  # Katana
  #

  # define the location of a dev area
  shot_dev_area_katana:
    definition: "@shot_root/dev/katana"
  # define the location of a pub area
  shot_pub_area_katana:
    definition: "@shot_root/pub/katana"
  # The location of WIP files
  katana_shot_dev:
    definition: "@shot_root/dev/katana/{Sequence}_{Shot}_{Task}_{name}.v{version}.katana"
  # The location of backups of WIP files
  katana_shot_snapshot:
    definition: "@shot_root/dev/katana/snapshots/{Sequence}_{Shot}_{Task}_{name}.v{version}.{timestamp}.katana"
  # The location of pubed katana files
  katana_shot_pub:
    definition: "@shot_root/pub/katana/{Sequence}_{Shot}_{Task}_{name}.v{version}.katana"

  # Rendered images
  katana_shot_render:
    definition: "@shot_root/dev/katana/render/{name}/v{version}/{katana_output}/{Shot}_{katana_output}_v{version}.{SEQ}.exr"
  katana_shot_pub_render:
    definition: "@shot_root/pub/katana/render/{name}/v{version}/{katana_output}/{Shot}_{katana_output}_v{version}.{SEQ}.exr"

  #
  # Clarisse
  #

  # define the location of a dev area
  shot_dev_area_clarisse:
    definition: '@shot_root/dev/clarisse'
  # define the location of a pub area
  shot_pub_area_clarisse:
    definition: '@shot_root/pub/clarisse'
  # The location of WIP files
  clarisse_shot_dev:
    definition: '@shot_root/dev/clarisse/{name}.v{version}.project'
  # The location of backups of WIP files
  clarisse_shot_snapshot:
    definition: '@shot_root/dev/clarisse/snapshots/{name}.v{version}.{timestamp}.project'
  # The location of pubed clarisse files
  clarisse_shot_pub:
    definition: '@shot_root/pub/clarisse/{name}.v{version}.project'

  ##########################################################################################
  # Asset pipeline

  #
  # Alembic caches
  #

  asset_alembic_cache:
    definition: "@asset_root/pub/caches/{name}.v{version}.abc"

  #
  # Maya
  #

  # define the location of a dev area
  asset_dev_area_maya:
    definition: "@asset_root/dev/maya"
  # define the location of a pub area
  asset_pub_area_maya:
    definition: "@asset_root/pub/maya"
  # The location of WIP files
  maya_asset_dev:
    definition: "@asset_root/dev/maya/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{maya_extension}"
  # The location of backups of WIP files
  maya_asset_snapshot:
    definition: "@asset_root/dev/maya/snapshots/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{timestamp}.{maya_extension}"
  # The location of pubed maya files
  maya_asset_pub:
    definition: "@asset_root/pub/maya/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{maya_extension}"

  #
  # Nuke
  #

  # define the location of a dev area
  asset_dev_area_nuke:
    definition: "@asset_root/dev/nuke"
  # define the location of a pub area
  asset_pub_area_nuke:
    definition: "@asset_root/pub"
  # outputs from the Shotgun Write Node for assets
  nuke_asset_render:
    definition: "@asset_root/dev/images/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr"
  nuke_asset_render_pub:
    definition: "@asset_root/pub/elements/{name}/v{version}/{width}x{height}/{Asset}_{name}_{nuke.output}_v{version}.{SEQ}.exr"
  # review output
  nuke_asset_render_movie:
    definition: "@asset_root/review/{Asset}_{name}_{nuke.output}_v{version}.mov"
  asset_quicktime_quick:
    definition: "@asset_root/review/quickdaily/{Asset}_{name}_{iteration}.mov"
  # The location of WIP script files
  nuke_asset_dev:
    definition: "@asset_root/dev/nuke/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.nk"
  # The location of backups of WIP files
  nuke_asset_snapshot:
    definition: "@asset_root/dev/nuke/snapshots/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{timestamp}.nk"
  # The location of pubed nuke script files
  nuke_asset_pub:
    definition: "@asset_root/pub/nuke/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.nk"

  #
  # Houdini
  #

  # define the location of a dev area
  asset_dev_area_houdini:
    definition: "@asset_root/dev/houdini"
  # define the location of a pub area
  asset_pub_area_houdini:
    definition: "@asset_root/pub/houdini"
  # The location of WIP files
  houdini_asset_dev:
    definition: "@asset_root/dev/houdini/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.hip"
  # The location of backups of WIP files
  houdini_asset_snapshot:
    definition: "@asset_root/dev/houdini/snapshots/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{timestamp}.hip"
  # The location of pubed houdini files
  houdini_asset_pub:
    definition: "@asset_root/pub/houdini/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.hip"
  # Alembic caches
  houdini_asset_dev_alembic_cache:
    definition: "@asset_root/dev/houdini/cache/alembic/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}/{houdini.node}/v{version}/{Asset}_{name}_v{version}.abc"

  # Rendered images
  houdini_asset_render:
    definition: "@asset_root/dev/images/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr"

  # Additional mantra outputs
  houdini_asset_ifd:
    definition: "@asset_root/dev/ifds/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.ifd"

  houdini_asset_dcm:
    definition: "@asset_root/dev/dcms/{name}/{houdini.node}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.dcm"

  houdini_asset_extra_plane:
    definition: "@asset_root/dev/images/{name}/{houdini.node}/{aov_name}/v{version}/{width}x{height}/{Asset}_{name}_v{version}.{SEQ}.exr"

  #
  # Mari
  #
  asset_mari_texture_tif:
    definition: "@asset_root/pub/mari/{name}_{mari.channel}_{mari.layer}.v{version}.{UDIM}.tif"
    root_name: "primary"

  #
  # Katana
  #

  # define the location of a dev area
  asset_dev_area_katana:
    definition: "@asset_root/dev/katana"
  # define the location of a pub area
  asset_pub_area_katana:
    definition: "@asset_root/pub/katana"
  # The location of WIP files
  katana_asset_dev:
    definition: "@asset_root/dev/katana/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.katana"
  # The location of backups of WIP files
  katana_asset_snapshot:
    definition: "@asset_root/dev/katana/snapshots/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.{timestamp}.katana"
  # The location of pubed katana files
  katana_asset_pub:
    definition: "@asset_root/pub/katana/{sg_asset_type}_{Asset}_{Step}_{Task}_{name}.v{version}.katana"

  # Rendered images
  katana_asset_render:
    definition: "@asset_root/dev/katana/render/{name}/v{version}/{katana_output}/{Asset}_{katana_output}_v{version}.{SEQ}.exr"
  katana_asset_pub_render:
    definition: "@asset_root/pub/katana/render/{name}/v{version}/{katana_output}/{Asset}_{katana_output}_v{version}.{SEQ}.exr"

  #
  # Clarisse
  #

  # define the location of a dev area
  asset_dev_area_clarisse:
    definition: '@asset_root/dev/clarisse'
  # define the location of a pub area
  asset_pub_area_clarisse:
    definition: '@asset_root/pub/clarisse'
  # The location of WIP files
  clarisse_asset_dev:
    definition: '@asset_root/dev/clarisse/{name}.v{version}.project'
  # The location of backups of WIP files
  clarisse_asset_snapshot:
    definition: '@asset_root/dev/clarisse/snapshots/{name}.v{version}.{timestamp}.project'
  # The location of pubed clarisse files
  clarisse_asset_pub:
    definition: '@asset_root/pub/clarisse/{name}.v{version}.project'

#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:
  # when a review Version in Shotgun is created inside of Nuke, this is the
  # name that is being given to it (the code field)
  nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
  nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

  nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
  nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

  # defines how the {tk_version} token in Hiero gets formatted back to tk.
  hiero_version: "{version}"
  # define how new Mari projects should be named
  mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"
